/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ca.mcgill.ecse223.quoridor;

import static org.junit.Assert.*;

import java.time.Duration;

import org.junit.Test;

import ca.mcgill.ecse223.quoridor.QuoridorApplication;
import ca.mcgill.ecse223.quoridor.model.Match;
import ca.mcgill.ecse223.quoridor.model.Match.GameState;
import ca.mcgill.ecse223.quoridor.model.Pawn.Color;
import ca.mcgill.ecse223.quoridor.model.Player;
import ca.mcgill.ecse223.quoridor.model.PlayerEnrollment;
import ca.mcgill.ecse223.quoridor.model.PlayerEnrollment.Outcome;
import ca.mcgill.ecse223.quoridor.model.Quoridor;
import ca.mcgill.ecse223.quoridor.model.Tile;

public class QuoridorTest {
	/*
	 * These tests do not have any real functionality and are only for getting
	 * familiarized with the code generated by Umple
	 */
	@Test
	public void testSomeLibraryMethod() {
		QuoridorApplication classUnderTest = new QuoridorApplication();
		assertTrue("someLibraryMethod should return 'true'", classUnderTest.someLibraryMethod());
	}

	@Test
	public void addPlayerToMatchTest() {
		try {
			Quoridor quoridor = new Quoridor();
			Match match = new Match(GameState.NEW_GAME, 1, true, quoridor);
			match.getBoard().addTile('A', 0);
			Tile tile = match.getBoard().getTile(0);
			Player player = new Player("s", 0, quoridor);
			String id = player.getName() + match.getId();
			Duration thinkingTime = Duration.ofMinutes(30);
			
			PlayerEnrollment pe = new PlayerEnrollment(id, Outcome.INCOMPLETE, thinkingTime, Color.BLACK, tile, player,
					match);
			
			if (match.getEnrolledPlayers().isEmpty() || !pe.getMatch().equals(match)) {
				fail();
			}

		} catch (Exception e) {
			e.printStackTrace();
			fail();
		}
	}
}
